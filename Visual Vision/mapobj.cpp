#include "mapobj.h"

int MapObj::numMap = 0;

/*****************************************************************************
 *
 *****************************************************************************/
MapObj::MapObj(QObject *parent) :
    QObject(parent)
{
    vhasrun = false;
    vId = ++numMap;
}

/*****************************************************************************
 *
 *****************************************************************************/
void MapObj::setNext(Data* frame, int location)
{
    vdat[location] = frame;
}

/*****************************************************************************
 *
 *****************************************************************************/
bool MapObj::isReadyToRun()
{
    for (int i = 0; i < vdat.size(); i++)
    {
        if (vdat[i] == NULL)
            return false;
    }

    return true;
}

/*****************************************************************************
 *
 *****************************************************************************/
void MapObj::setupNextFrame()
{
    vhasrun = false;
    for (int i = 0; i < vdat.size(); i++)
    {
        if (vdat[i] != NULL)
        {
            vdat[i] = NULL;
        }
    }
}

/*****************************************************************************
 *
 *****************************************************************************/
void MapObj::resetToFrameZero()
{
    setupNextFrame();
    int numInputs = getInputTypes().size();
    vdat.resize(numInputs);
    for (int i = 0; i < numInputs; i++)
    {
        vdat[i] = NULL;
    }
    vhasrun = false;
    reset();
}

/*****************************************************************************
 *
 *****************************************************************************/
QVector<Data*> MapObj::runObj()
{
    QVector<Data*> d = run(vdat);
    vhasrun = true;

    return d;
}

/*****************************************************************************
 *
 *****************************************************************************/
bool MapObj::hasRun()
{
    return vhasrun;
}

/*****************************************************************************
 *
 *****************************************************************************/
void MapObj::setId(int id)
{
    vId = id;
    if (numMap < vId)
        numMap = vId;
}

/*****************************************************************************
 *
 *****************************************************************************/
int MapObj::getId()
{
    return vId;
}
